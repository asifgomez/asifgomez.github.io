<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shivendra TechSter on Asif Ali</title>
    <link>https://busyasif.dev/</link>
    <description>Recent content in Shivendra TechSter on Asif Ali</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 03 May 2024 23:21:12 +0530</lastBuildDate>
    <atom:link href="https://busyasif.dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LeetCode 35: Search Insert Position Solution in Go</title>
      <link>https://busyasif.dev/posts/leetcode-35-search-insert-position-solution-in-go/</link>
      <pubDate>Fri, 03 May 2024 23:21:12 +0530</pubDate>
      <guid>https://busyasif.dev/posts/leetcode-35-search-insert-position-solution-in-go/</guid>
      <description>In this post we&amp;rsquo;ll solve and discuss the LeetCode problem no. 35 - Search Insert Position. We&amp;rsquo;ll be using Go language.&#xA;The problem has the following description:&#xA;Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.&#xA;You must write an algorithm with O(log n) runtime complexity&amp;quot;</description>
    </item>
    <item>
      <title>Create Rest Api With Go Gin GORM and Postgres</title>
      <link>https://busyasif.dev/posts/create-rest-api-with-go-gin-gorm-and-postgres/</link>
      <pubDate>Mon, 22 Apr 2024 21:00:28 +0530</pubDate>
      <guid>https://busyasif.dev/posts/create-rest-api-with-go-gin-gorm-and-postgres/</guid>
      <description>In this post we&amp;rsquo;ll create an API using Go, Gin and GORM, that will allow us to save and fetch todo items from a Postgres database.&#xA;Project Setup To start the project setup, create a directory (folder) with the name of your project. Here I&amp;rsquo;ll create a directory named todo-go-backend.&#xA;Let&amp;rsquo;s initialize Go module in our project so that we can install libraries using go mod. Run the following command in the project directory:</description>
    </item>
    <item>
      <title>How to create Desktop Entry for an App on Linux</title>
      <link>https://busyasif.dev/posts/create-desktop-entry-for-an-app-on-linux/</link>
      <pubDate>Fri, 07 Jul 2023 22:52:36 +0530</pubDate>
      <guid>https://busyasif.dev/posts/create-desktop-entry-for-an-app-on-linux/</guid>
      <description>This post will guide on how to create desktop entry for an app on Linux. We would use MenuLibre to do this. MenuLibre is an advance menu editor for the Free and Open Source desktop and supports Budgie, GNOME, KDE, LXDE, MATE, Pantheon, Unity, and Xfce.&#xA;Download and extract MenuLibre&#xA;To download MenuLibre go the the GitHub Repository of MenuLibre and click on the latest release link in the Releases section.</description>
    </item>
    <item>
      <title>How to Use wxWidgets with Visual Studio 2022</title>
      <link>https://busyasif.dev/posts/how-to-use-wxwidgets-with-visual-studio-2022/</link>
      <pubDate>Mon, 12 Dec 2022 22:26:52 +0530</pubDate>
      <guid>https://busyasif.dev/posts/how-to-use-wxwidgets-with-visual-studio-2022/</guid>
      <description>This post will guide you on how to build wxWidgets from source and use in your project. First of all go to wxWidgets.com/downloads and then download the Windows ZIP file from the Source code section.&#xA;Now you can make a folder with the name SDKs (or whatever you prefer) and unzip the downloaded the source code in that folder. If you created the SDKs folder in C drive then right now your path to source code directory would be like this C:\SDKs\wxWidgets-3.</description>
    </item>
  </channel>
</rss>
